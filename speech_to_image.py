# -*- coding: utf-8 -*-
"""speech_to_image.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mOWEgVUSCI9kuxrNXvRR8Z2owR9uZ3IJ
"""

import streamlit as st
from time import sleep
from functions import (
    load_whisper_model,
    load_stable_diffusion,
    load_sentiment_analysis,
    record_audio,
    transcribe_audio,
    analyze_sentiment,
    generate_image,
)

# Load models
processor, model = load_whisper_model()
pipe = load_stable_diffusion()
sentiment_pipeline = load_sentiment_analysis()

# Streamlit UI setup
st.set_page_config(page_title="Speech-to-Image Generator", layout="wide")

# Title and description
st.title("Speech-to-Image Generator")
st.write("Record your audio, transcribe it, perform sentiment analysis, and generate an image.")

# Audio recording duration slider
duration = st.slider(
    "Select recording duration (seconds)", 1, 30, 15, 1, help="Set the duration for recording."
)

# Record audio button
if st.button("Start Recording üéôÔ∏è"):
    st.info("Recording... Please speak clearly.")
    audio_path = record_audio(duration)
    st.success("Recording complete!")

    # Transcription
    st.write("**Transcribing audio...**")
    transcription = transcribe_audio(audio_path, processor, model)
    st.write(f"**Transcription:** {transcription}")

    # Sentiment analysis
    st.write("**Analyzing sentiment...**")
    sentiment_label, sentiment_score = analyze_sentiment(transcription, sentiment_pipeline)
    st.write(f"**Sentiment:** {sentiment_label} (Confidence: {sentiment_score:.2f})")

    # Image generation
    if sentiment_label == "NEGATIVE":
        st.warning("The sentiment is negative. No image will be generated.")
    else:
        st.write("**Generating image from transcription...**")
        with st.spinner("This may take a few seconds..."):
            sleep(2)
            image = generate_image(transcription, pipe)
        st.image(image, caption="Generated Image", use_column_width=True)